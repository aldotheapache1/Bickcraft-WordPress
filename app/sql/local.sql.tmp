-- MySQL dump 10.13  Distrib 8.0.16, for Win64 (x86_64)
--
-- Host: ::1    Database: local
-- ------------------------------------------------------
-- Server version	8.0.16

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
 SET NAMES utf8mb4 ;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_520_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'comment',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (1,1,'A WordPress Commenter','wapuu@wordpress.example','https://wordpress.org/','','2021-01-21 18:38:08','2021-01-21 18:38:08','Hi, this is a comment.\nTo get started with moderating, editing, and deleting comments, please visit the Comments screen in the dashboard.\nCommenter avatars come from <a href=\"https://gravatar.com\">Gravatar</a>.',0,'1','','comment',0,0);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
 SET character_set_client = utf8mb4 ;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`),
  KEY `autoload` (`autoload`)
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://bickcraft.test','yes');
INSERT INTO `wp_options` VALUES (2,'home','http://bickcraft.test','yes');
INSERT INTO `wp_options` VALUES (3,'blogname','Bickcraft','yes');
INSERT INTO `wp_options` VALUES (4,'blogdescription','Just another WordPress site','yes');
INSERT INTO `wp_options` VALUES (5,'users_can_register','0','yes');
INSERT INTO `wp_options` VALUES (6,'admin_email','dev-email@flywheel.local','yes');
INSERT INTO `wp_options` VALUES (7,'start_of_week','1','yes');
INSERT INTO `wp_options` VALUES (8,'use_balanceTags','0','yes');
INSERT INTO `wp_options` VALUES (9,'use_smilies','1','yes');
INSERT INTO `wp_options` VALUES (10,'require_name_email','1','yes');
INSERT INTO `wp_options` VALUES (11,'comments_notify','1','yes');
INSERT INTO `wp_options` VALUES (12,'posts_per_rss','10','yes');
INSERT INTO `wp_options` VALUES (13,'rss_use_excerpt','0','yes');
INSERT INTO `wp_options` VALUES (14,'mailserver_url','mail.example.com','yes');
INSERT INTO `wp_options` VALUES (15,'mailserver_login','login@example.com','yes');
INSERT INTO `wp_options` VALUES (16,'mailserver_pass','password','yes');
INSERT INTO `wp_options` VALUES (17,'mailserver_port','110','yes');
INSERT INTO `wp_options` VALUES (18,'default_category','1','yes');
INSERT INTO `wp_options` VALUES (19,'default_comment_status','open','yes');
INSERT INTO `wp_options` VALUES (20,'default_ping_status','open','yes');
INSERT INTO `wp_options` VALUES (21,'default_pingback_flag','1','yes');
INSERT INTO `wp_options` VALUES (22,'posts_per_page','10','yes');
INSERT INTO `wp_options` VALUES (23,'date_format','F j, Y','yes');
INSERT INTO `wp_options` VALUES (24,'time_format','g:i a','yes');
INSERT INTO `wp_options` VALUES (25,'links_updated_date_format','F j, Y g:i a','yes');
INSERT INTO `wp_options` VALUES (26,'comment_moderation','0','yes');
INSERT INTO `wp_options` VALUES (27,'moderation_notify','1','yes');
INSERT INTO `wp_options` VALUES (28,'permalink_structure','/%postname%/','yes');
INSERT INTO `wp_options` VALUES (29,'rewrite_rules','a:93:{s:11:\"^wp-json/?$\";s:22:\"index.php?rest_route=/\";s:14:\"^wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:21:\"^index.php/wp-json/?$\";s:22:\"index.php?rest_route=/\";s:24:\"^index.php/wp-json/(.*)?\";s:33:\"index.php?rest_route=/$matches[1]\";s:17:\"^wp-sitemap\\.xml$\";s:23:\"index.php?sitemap=index\";s:17:\"^wp-sitemap\\.xsl$\";s:36:\"index.php?sitemap-stylesheet=sitemap\";s:23:\"^wp-sitemap-index\\.xsl$\";s:34:\"index.php?sitemap-stylesheet=index\";s:48:\"^wp-sitemap-([a-z]+?)-([a-z\\d_-]+?)-(\\d+?)\\.xml$\";s:75:\"index.php?sitemap=$matches[1]&sitemap-subtype=$matches[2]&paged=$matches[3]\";s:34:\"^wp-sitemap-([a-z]+?)-(\\d+?)\\.xml$\";s:47:\"index.php?sitemap=$matches[1]&paged=$matches[2]\";s:47:\"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:42:\"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:52:\"index.php?category_name=$matches[1]&feed=$matches[2]\";s:23:\"category/(.+?)/embed/?$\";s:46:\"index.php?category_name=$matches[1]&embed=true\";s:35:\"category/(.+?)/page/?([0-9]{1,})/?$\";s:53:\"index.php?category_name=$matches[1]&paged=$matches[2]\";s:17:\"category/(.+?)/?$\";s:35:\"index.php?category_name=$matches[1]\";s:44:\"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:39:\"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?tag=$matches[1]&feed=$matches[2]\";s:20:\"tag/([^/]+)/embed/?$\";s:36:\"index.php?tag=$matches[1]&embed=true\";s:32:\"tag/([^/]+)/page/?([0-9]{1,})/?$\";s:43:\"index.php?tag=$matches[1]&paged=$matches[2]\";s:14:\"tag/([^/]+)/?$\";s:25:\"index.php?tag=$matches[1]\";s:45:\"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:40:\"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?post_format=$matches[1]&feed=$matches[2]\";s:21:\"type/([^/]+)/embed/?$\";s:44:\"index.php?post_format=$matches[1]&embed=true\";s:33:\"type/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?post_format=$matches[1]&paged=$matches[2]\";s:15:\"type/([^/]+)/?$\";s:33:\"index.php?post_format=$matches[1]\";s:12:\"robots\\.txt$\";s:18:\"index.php?robots=1\";s:13:\"favicon\\.ico$\";s:19:\"index.php?favicon=1\";s:48:\".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$\";s:18:\"index.php?feed=old\";s:20:\".*wp-app\\.php(/.*)?$\";s:19:\"index.php?error=403\";s:18:\".*wp-register.php$\";s:23:\"index.php?register=true\";s:32:\"feed/(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:27:\"(feed|rdf|rss|rss2|atom)/?$\";s:27:\"index.php?&feed=$matches[1]\";s:8:\"embed/?$\";s:21:\"index.php?&embed=true\";s:20:\"page/?([0-9]{1,})/?$\";s:28:\"index.php?&paged=$matches[1]\";s:41:\"comments/feed/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:36:\"comments/(feed|rdf|rss|rss2|atom)/?$\";s:42:\"index.php?&feed=$matches[1]&withcomments=1\";s:17:\"comments/embed/?$\";s:21:\"index.php?&embed=true\";s:44:\"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:39:\"search/(.+)/(feed|rdf|rss|rss2|atom)/?$\";s:40:\"index.php?s=$matches[1]&feed=$matches[2]\";s:20:\"search/(.+)/embed/?$\";s:34:\"index.php?s=$matches[1]&embed=true\";s:32:\"search/(.+)/page/?([0-9]{1,})/?$\";s:41:\"index.php?s=$matches[1]&paged=$matches[2]\";s:14:\"search/(.+)/?$\";s:23:\"index.php?s=$matches[1]\";s:47:\"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:42:\"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:50:\"index.php?author_name=$matches[1]&feed=$matches[2]\";s:23:\"author/([^/]+)/embed/?$\";s:44:\"index.php?author_name=$matches[1]&embed=true\";s:35:\"author/([^/]+)/page/?([0-9]{1,})/?$\";s:51:\"index.php?author_name=$matches[1]&paged=$matches[2]\";s:17:\"author/([^/]+)/?$\";s:33:\"index.php?author_name=$matches[1]\";s:69:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:64:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:80:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]\";s:45:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/embed/?$\";s:74:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&embed=true\";s:57:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:81:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]\";s:39:\"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$\";s:63:\"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]\";s:56:\"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:51:\"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$\";s:64:\"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]\";s:32:\"([0-9]{4})/([0-9]{1,2})/embed/?$\";s:58:\"index.php?year=$matches[1]&monthnum=$matches[2]&embed=true\";s:44:\"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$\";s:65:\"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]\";s:26:\"([0-9]{4})/([0-9]{1,2})/?$\";s:47:\"index.php?year=$matches[1]&monthnum=$matches[2]\";s:43:\"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:38:\"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?year=$matches[1]&feed=$matches[2]\";s:19:\"([0-9]{4})/embed/?$\";s:37:\"index.php?year=$matches[1]&embed=true\";s:31:\"([0-9]{4})/page/?([0-9]{1,})/?$\";s:44:\"index.php?year=$matches[1]&paged=$matches[2]\";s:13:\"([0-9]{4})/?$\";s:26:\"index.php?year=$matches[1]\";s:27:\".?.+?/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\".?.+?/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\".?.+?/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"(.?.+?)/embed/?$\";s:41:\"index.php?pagename=$matches[1]&embed=true\";s:20:\"(.?.+?)/trackback/?$\";s:35:\"index.php?pagename=$matches[1]&tb=1\";s:40:\"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:35:\"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$\";s:47:\"index.php?pagename=$matches[1]&feed=$matches[2]\";s:28:\"(.?.+?)/page/?([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&paged=$matches[2]\";s:35:\"(.?.+?)/comment-page-([0-9]{1,})/?$\";s:48:\"index.php?pagename=$matches[1]&cpage=$matches[2]\";s:24:\"(.?.+?)(?:/([0-9]+))?/?$\";s:47:\"index.php?pagename=$matches[1]&page=$matches[2]\";s:27:\"[^/]+/attachment/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:37:\"[^/]+/attachment/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:57:\"[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\"[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:52:\"[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:33:\"[^/]+/attachment/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";s:16:\"([^/]+)/embed/?$\";s:37:\"index.php?name=$matches[1]&embed=true\";s:20:\"([^/]+)/trackback/?$\";s:31:\"index.php?name=$matches[1]&tb=1\";s:40:\"([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?name=$matches[1]&feed=$matches[2]\";s:35:\"([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:43:\"index.php?name=$matches[1]&feed=$matches[2]\";s:28:\"([^/]+)/page/?([0-9]{1,})/?$\";s:44:\"index.php?name=$matches[1]&paged=$matches[2]\";s:35:\"([^/]+)/comment-page-([0-9]{1,})/?$\";s:44:\"index.php?name=$matches[1]&cpage=$matches[2]\";s:24:\"([^/]+)(?:/([0-9]+))?/?$\";s:43:\"index.php?name=$matches[1]&page=$matches[2]\";s:16:\"[^/]+/([^/]+)/?$\";s:32:\"index.php?attachment=$matches[1]\";s:26:\"[^/]+/([^/]+)/trackback/?$\";s:37:\"index.php?attachment=$matches[1]&tb=1\";s:46:\"[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:41:\"[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$\";s:49:\"index.php?attachment=$matches[1]&feed=$matches[2]\";s:41:\"[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$\";s:50:\"index.php?attachment=$matches[1]&cpage=$matches[2]\";s:22:\"[^/]+/([^/]+)/embed/?$\";s:43:\"index.php?attachment=$matches[1]&embed=true\";}','yes');
INSERT INTO `wp_options` VALUES (30,'hack_file','0','yes');
INSERT INTO `wp_options` VALUES (31,'blog_charset','UTF-8','yes');
INSERT INTO `wp_options` VALUES (32,'moderation_keys','','no');
INSERT INTO `wp_options` VALUES (33,'active_plugins','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (34,'category_base','','yes');
INSERT INTO `wp_options` VALUES (35,'ping_sites','http://rpc.pingomatic.com/','yes');
INSERT INTO `wp_options` VALUES (36,'comment_max_links','2','yes');
INSERT INTO `wp_options` VALUES (37,'gmt_offset','0','yes');
INSERT INTO `wp_options` VALUES (38,'default_email_category','1','yes');
INSERT INTO `wp_options` VALUES (39,'recently_edited','','no');
INSERT INTO `wp_options` VALUES (40,'template','Bikcraft','yes');
INSERT INTO `wp_options` VALUES (41,'stylesheet','Bikcraft','yes');
INSERT INTO `wp_options` VALUES (42,'comment_registration','0','yes');
INSERT INTO `wp_options` VALUES (43,'html_type','text/html','yes');
INSERT INTO `wp_options` VALUES (44,'use_trackback','0','yes');
INSERT INTO `wp_options` VALUES (45,'default_role','subscriber','yes');
INSERT INTO `wp_options` VALUES (46,'db_version','49752','yes');
INSERT INTO `wp_options` VALUES (47,'uploads_use_yearmonth_folders','1','yes');
INSERT INTO `wp_options` VALUES (48,'upload_path','','yes');
INSERT INTO `wp_options` VALUES (49,'blog_public','1','yes');
INSERT INTO `wp_options` VALUES (50,'default_link_category','2','yes');
INSERT INTO `wp_options` VALUES (51,'show_on_front','posts','yes');
INSERT INTO `wp_options` VALUES (52,'tag_base','','yes');
INSERT INTO `wp_options` VALUES (53,'show_avatars','1','yes');
INSERT INTO `wp_options` VALUES (54,'avatar_rating','G','yes');
INSERT INTO `wp_options` VALUES (55,'upload_url_path','','yes');
INSERT INTO `wp_options` VALUES (56,'thumbnail_size_w','150','yes');
INSERT INTO `wp_options` VALUES (57,'thumbnail_size_h','150','yes');
INSERT INTO `wp_options` VALUES (58,'thumbnail_crop','1','yes');
INSERT INTO `wp_options` VALUES (59,'medium_size_w','300','yes');
INSERT INTO `wp_options` VALUES (60,'medium_size_h','300','yes');
INSERT INTO `wp_options` VALUES (61,'avatar_default','mystery','yes');
INSERT INTO `wp_options` VALUES (62,'large_size_w','1024','yes');
INSERT INTO `wp_options` VALUES (63,'large_size_h','1024','yes');
INSERT INTO `wp_options` VALUES (64,'image_default_link_type','none','yes');
INSERT INTO `wp_options` VALUES (65,'image_default_size','','yes');
INSERT INTO `wp_options` VALUES (66,'image_default_align','','yes');
INSERT INTO `wp_options` VALUES (67,'close_comments_for_old_posts','0','yes');
INSERT INTO `wp_options` VALUES (68,'close_comments_days_old','14','yes');
INSERT INTO `wp_options` VALUES (69,'thread_comments','1','yes');
INSERT INTO `wp_options` VALUES (70,'thread_comments_depth','5','yes');
INSERT INTO `wp_options` VALUES (71,'page_comments','0','yes');
INSERT INTO `wp_options` VALUES (72,'comments_per_page','50','yes');
INSERT INTO `wp_options` VALUES (73,'default_comments_page','newest','yes');
INSERT INTO `wp_options` VALUES (74,'comment_order','asc','yes');
INSERT INTO `wp_options` VALUES (75,'sticky_posts','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (76,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (77,'widget_text','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (78,'widget_rss','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (79,'uninstall_plugins','a:0:{}','no');
INSERT INTO `wp_options` VALUES (80,'timezone_string','','yes');
INSERT INTO `wp_options` VALUES (81,'page_for_posts','0','yes');
INSERT INTO `wp_options` VALUES (82,'page_on_front','0','yes');
INSERT INTO `wp_options` VALUES (83,'default_post_format','0','yes');
INSERT INTO `wp_options` VALUES (84,'link_manager_enabled','0','yes');
INSERT INTO `wp_options` VALUES (85,'finished_splitting_shared_terms','1','yes');
INSERT INTO `wp_options` VALUES (86,'site_icon','0','yes');
INSERT INTO `wp_options` VALUES (87,'medium_large_size_w','768','yes');
INSERT INTO `wp_options` VALUES (88,'medium_large_size_h','0','yes');
INSERT INTO `wp_options` VALUES (89,'wp_page_for_privacy_policy','3','yes');
INSERT INTO `wp_options` VALUES (90,'show_comments_cookies_opt_in','1','yes');
INSERT INTO `wp_options` VALUES (91,'admin_email_lifespan','1626806266','yes');
INSERT INTO `wp_options` VALUES (92,'disallowed_keys','','no');
INSERT INTO `wp_options` VALUES (93,'comment_previously_approved','1','yes');
INSERT INTO `wp_options` VALUES (94,'auto_plugin_theme_update_emails','a:0:{}','no');
INSERT INTO `wp_options` VALUES (95,'auto_update_core_dev','enabled','yes');
INSERT INTO `wp_options` VALUES (96,'auto_update_core_minor','enabled','yes');
INSERT INTO `wp_options` VALUES (97,'auto_update_core_major','enabled','yes');
INSERT INTO `wp_options` VALUES (98,'initial_db_version','49752','yes');
INSERT INTO `wp_options` VALUES (99,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes');
INSERT INTO `wp_options` VALUES (100,'fresh_site','1','yes');
INSERT INTO `wp_options` VALUES (101,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (102,'widget_recent-posts','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (103,'widget_recent-comments','a:2:{i:2;a:2:{s:5:\"title\";s:0:\"\";s:6:\"number\";i:5;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (104,'widget_archives','a:2:{i:2;a:3:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (105,'widget_meta','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (106,'sidebars_widgets','a:2:{s:19:\"wp_inactive_widgets\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}s:13:\"array_version\";i:3;}','yes');
INSERT INTO `wp_options` VALUES (107,'cron','a:6:{i:1611261494;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}i:1611297495;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1611340692;a:2:{s:30:\"wp_site_health_scheduled_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"weekly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:604800;}}s:32:\"recovery_mode_clean_expired_keys\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1611343195;a:2:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1611343205;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}s:7:\"version\";i:2;}','yes');
INSERT INTO `wp_options` VALUES (108,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (109,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (110,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (111,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (112,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (113,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (114,'nonce_key','Z,gBxJ4;CXlD4@m,/h0w4eg*Byh OTC+[[{wpAK4T&7O6C)dj2!fyw^)$mmB8gL1','no');
INSERT INTO `wp_options` VALUES (115,'nonce_salt','_ nQ)#KojLg^mX8^]_>c<VU+d@;F>4%h#r4ogL$=i+G)=$13.A&M!!DQGzKBefnt','no');
INSERT INTO `wp_options` VALUES (116,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (117,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (118,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes');
INSERT INTO `wp_options` VALUES (120,'recovery_keys','a:0:{}','yes');
INSERT INTO `wp_options` VALUES (121,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:1:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.6.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:57:\"https://downloads.wordpress.org/release/wordpress-5.6.zip\";s:10:\"no_content\";s:68:\"https://downloads.wordpress.org/release/wordpress-5.6-no-content.zip\";s:11:\"new_bundled\";s:69:\"https://downloads.wordpress.org/release/wordpress-5.6-new-bundled.zip\";s:7:\"partial\";s:0:\"\";s:8:\"rollback\";s:0:\"\";}s:7:\"current\";s:3:\"5.6\";s:7:\"version\";s:3:\"5.6\";s:11:\"php_version\";s:6:\"5.6.20\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"5.6\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1611256446;s:15:\"version_checked\";s:3:\"5.6\";s:12:\"translations\";a:0:{}}','no');
INSERT INTO `wp_options` VALUES (123,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1611254298;s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:0:{}}','no');
INSERT INTO `wp_options` VALUES (127,'_site_transient_update_themes','O:8:\"stdClass\":5:{s:12:\"last_checked\";i:1611259286;s:7:\"checked\";a:4:{s:8:\"Bikcraft\";s:3:\"1.0\";s:14:\"twentynineteen\";s:3:\"1.8\";s:12:\"twentytwenty\";s:3:\"1.6\";s:15:\"twentytwentyone\";s:3:\"1.0\";}s:8:\"response\";a:2:{s:14:\"twentynineteen\";a:6:{s:5:\"theme\";s:14:\"twentynineteen\";s:11:\"new_version\";s:3:\"1.9\";s:3:\"url\";s:44:\"https://wordpress.org/themes/twentynineteen/\";s:7:\"package\";s:60:\"https://downloads.wordpress.org/theme/twentynineteen.1.9.zip\";s:8:\"requires\";s:5:\"4.9.6\";s:12:\"requires_php\";s:5:\"5.2.4\";}s:15:\"twentytwentyone\";a:6:{s:5:\"theme\";s:15:\"twentytwentyone\";s:11:\"new_version\";s:3:\"1.1\";s:3:\"url\";s:45:\"https://wordpress.org/themes/twentytwentyone/\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/theme/twentytwentyone.1.1.zip\";s:8:\"requires\";s:3:\"5.3\";s:12:\"requires_php\";s:3:\"5.6\";}}s:9:\"no_update\";a:1:{s:12:\"twentytwenty\";a:6:{s:5:\"theme\";s:12:\"twentytwenty\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/themes/twentytwenty/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/theme/twentytwenty.1.6.zip\";s:8:\"requires\";s:3:\"4.7\";s:12:\"requires_php\";s:5:\"5.2.4\";}}s:12:\"translations\";a:0:{}}','no');
INSERT INTO `wp_options` VALUES (128,'theme_mods_twentytwentyone','a:2:{s:18:\"custom_css_post_id\";i:-1;s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1611259292;s:4:\"data\";a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:3:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";}s:9:\"sidebar-2\";a:3:{i:0;s:10:\"archives-2\";i:1;s:12:\"categories-2\";i:2;s:6:\"meta-2\";}}}}','yes');
INSERT INTO `wp_options` VALUES (129,'_site_transient_timeout_browser_94fb6483abf307a4bafac80827dcc22a','1611861599','no');
INSERT INTO `wp_options` VALUES (130,'_site_transient_browser_94fb6483abf307a4bafac80827dcc22a','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"87.0.4280.141\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no');
INSERT INTO `wp_options` VALUES (132,'_site_transient_timeout_community-events-d41d8cd98f00b204e9800998ecf8427e','1611300009','no');
INSERT INTO `wp_options` VALUES (133,'_site_transient_community-events-d41d8cd98f00b204e9800998ecf8427e','a:4:{s:9:\"sandboxed\";b:0;s:5:\"error\";N;s:8:\"location\";a:1:{s:2:\"ip\";b:0;}s:6:\"events\";a:2:{i:0;a:10:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:75:\"Watch Party & Discussion: Contributing to the WordPress Open Source Project\";s:3:\"url\";s:68:\"https://www.meetup.com/learn-wordpress-discussions/events/275757330/\";s:6:\"meetup\";s:27:\"Learn WordPress Discussions\";s:10:\"meetup_url\";s:51:\"https://www.meetup.com/learn-wordpress-discussions/\";s:4:\"date\";s:19:\"2021-01-21 15:00:00\";s:8:\"end_date\";s:19:\"2021-01-21 16:00:00\";s:20:\"start_unix_timestamp\";i:1611270000;s:18:\"end_unix_timestamp\";i:1611273600;s:8:\"location\";a:4:{s:8:\"location\";s:6:\"Online\";s:7:\"country\";s:2:\"US\";s:8:\"latitude\";d:37.779998779297003;s:9:\"longitude\";d:-122.41999816895;}}i:1;a:10:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:23:\"WordCamp India (Online)\";s:3:\"url\";s:32:\"https://india.wordcamp.org/2021/\";s:6:\"meetup\";N;s:10:\"meetup_url\";N;s:4:\"date\";s:19:\"2021-01-30 00:00:00\";s:8:\"end_date\";s:19:\"2021-02-14 00:00:00\";s:20:\"start_unix_timestamp\";i:1611945000;s:18:\"end_unix_timestamp\";i:1613241000;s:8:\"location\";a:4:{s:8:\"location\";s:6:\"Online\";s:7:\"country\";s:2:\"IN\";s:8:\"latitude\";d:20.593684;s:9:\"longitude\";d:78.962879999999998;}}}}','no');
INSERT INTO `wp_options` VALUES (134,'_transient_timeout_feed_d117b5738fbd35bd8c0391cda1f2b5d9','1611300023','no');
INSERT INTO `wp_options` VALUES (135,'_transient_feed_d117b5738fbd35bd8c0391cda1f2b5d9','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:61:\"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:16:\"WordPress Planet\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"en\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:47:\"WordPress Planet - http://planet.wordpress.org/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:50:{i:0;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"WordPress.org blog: People of WordPress: Thelma Mutete\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"https://wordpress.org/news/?p=9518\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://wordpress.org/news/2021/01/people-of-wordpress-thelma-mutete/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:7953:\"<p><em>WordPress is open source software, maintained by a global network of contributors. There are many examples of how WordPress has changed people’s lives for the better. In this monthly series, we share some of those lesser-known, amazing stories.</em></p>\n\n\n\n<p>From a young age Thelma was encouraged by her father to ‘work hard, and dream big’. In High School, she pursued a career in Computer Science. She said: “I did not know what I would be doing or how I would get there but I just knew that I was going to pursue a career in information technology.”</p>\n\n\n\n<p>She wrote her first line of code at the age of 16 living in Zimbabwe, Africa. This was to mark the beginning of her enthusiasm for computer programming.</p>\n\n\n\n<p>When she joined the school’s computer class, Thelma thought she would learn Excel and Word. Instead, the assignment was to write her first program in C. She said: “It was not easy, but it was very exciting. l remember writing up simple code for a Video Club – a check-in/out for VHS tapes and CDs. Thus began my fascination with computers.”</p>\n\n\n\n<p>Seven years later, she went on to university to study for a Bachelors in Business Management and Information Technology. Her third year internship was at a local web design and hosting company. Though she had hoped her placement would be at a local bank or telecommunications company, the chance to discover website design turned out to be the best thing that could have happened.&nbsp;</p>\n\n\n\n<p>In 2017, Thelma went on to work for a company designing websites using HTML, CSS, PHP, JavaScript and Joomla. She had heard about WordPress but had not used it. She recalls: “People have this misconception that WordPress is not for real developers and it is not secure and at that time I was one of those people.”</p>\n\n\n\n<h2>Finding a local community</h2>\n\n\n\n<p>From a discussion with a member of the local WordPress community, <a href=\"https://heropress.com/essays/wordpress-opened-whole-new-world/\">Thabo Tswana</a>, about a striking swag gift from a WordCamp, Thelma’s interest was sparked.&nbsp;</p>\n\n\n\n<p>She started to find out more about WordPress and WooCommerce, and visited her local WordCamp Harare website. She was delighted to find that she could learn more about WordPress without needing any pre-existing knowledge, and wanted to be involved. So instead of just attending the camp, she volunteered too!&nbsp;</p>\n\n\n\n<p>Her response to her first WordPress event mirrors the experience of many others in the community. She said: “I only started using WordPress because of the awesome people that l had met at that WordCamp. Everyone was so welcoming.”</p>\n\n\n\n<p>A week later, with help from Thabo, she designed her first website using WordPress.</p>\n\n\n\n<p>She soon became more involved with the community and Meetups. Thelma participated in the first-ever ‘Women Who WordPress’ Meetup in 2018, with lots of women getting involved from bloggers to developers.&nbsp;</p>\n\n\n\n<p>She said: “We were free to talk and discuss a lot of things. We had more time to discuss the difference between WordPress.com and WordPress.org, we shared views on how to handle discrimination at work, how to promote your website and a whole lot of other things.”</p>\n\n\n\n<h2>Establishing roots in WordPress</h2>\n\n\n\n<p>In 2018, WordCamp Harare had its first-ever female Lead Organizer <a href=\"https://tapiwanashe.com/\">Tapiwanashe Manhobo</a>. Thelma was part of the organising team that year and was assigned to handle Harare’s first Kids Camp to take place eight months later. You can read more about her experiences of organizing a <a href=\"https://thelmachido.wordpress.com/2019/11/21/wordpress-juniours-first-edition/\"><strong>Kids Camp</strong></a> on her blog.</p>\n\n\n\n<p>She said: “After the first Kids Camp, we had several people in the local Zimbabwean WordPress community who were enthusiastic about encouraging young people to embrace ICT. In 2019, we had not planned to have a Kids Camp because of financial constraints but to our surprise, we had some anonymous donations and we managed to have a WordPress Community outreach to a youth centre, <a href=\"https://cttzim.org/\"><strong>Centre for Total Transformation</strong></a>, a week after our WordCamp. It is a non-formal school that caters for underprivileged and vulnerable children. The group were able to share practical skills about using WordPress, computer hardware and software.</p>\n\n\n\n<p>Thelma shares that she became hooked on WordPress because of its community. “I enjoy attending WordCamps, meeting new people and just learning new stuff. I have a huge list of WordCamps I would like to attend. Last year I managed to cross WordCamp Johannesburg off my list. When everything is back to normal my plan to travel to WordCamps will proceed (fingers crossed).”</p>\n\n\n\n<h2>Reaping the fruits of ongoing learning</h2>\n\n\n\n<p>Thelma is committed to ongoing development training. She said: “Even though I can still cook up code in C and Java, for now, I have also included WordPress PHP functions to the mix. It was not easy to get to this point, daring myself got me to this slightly better stage. I try to do my best where I can and I am happy to say it has paid off so far.”</p>\n\n\n\n<p>Thelma has continued her journey working in design and digital marketing last year with Trust Nhokovenzo who works in digital marketing and is active in&nbsp; the WordPress Community. He came across her name as a developer from talking with others involved in WordPress. She went to work with his team at a marketing agency.</p>\n\n\n\n<p>Her interest in the development of WordPress continued and she joined the <a href=\"https://wordpress.org/news/2020/12/simone/\">5.6 Release Squad</a> in the mid 2020.&nbsp;At the end of 2020, she moved to become a Happiness Engineer working with WordPress.com. Thelma’s fascination with the platform and the community continues to grow and her contributor story is ongoing.</p>\n\n\n\n<p>Find out more about the <a href=\"https://www.meetup.com/Harare-WordPress-Meetup\">Harare WordPress community</a> in Zimbabwe.</p>\n\n\n\n<h2>Contributors</h2>\n\n\n\n<p>Thanks to Nalini Thakor (<a href=\"https://profiles.wordpress.org/nalininonstopnewsuk/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>nalininonstopnewsuk</a>) and Surendra Thakor (<a href=\"https://profiles.wordpress.org/sthakor/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>sthakor</a>), Yvette Sonneveld (<a href=\"https://profiles.wordpress.org/yvettesonneveld/\">@yvettesonnevel</a>d), Abha Thakor (<a href=\"https://profiles.wordpress.org/webcommsat/\">@webcommsat</a>), Larissa Murillo (<a href=\"https://profiles.wordpress.org/lmurillom/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>lmurillom</a>), Meher Bala (<a href=\"https://profiles.wordpress.org/meher/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>meher</a>), Josepha Haden (<a href=\"https://profiles.wordpress.org/chanthaboune/\">@chanthaboune</a>), and Chloé Bringmann (<a href=\"https://profiles.wordpress.org/cbringmann/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>cbringmann</a>). Thank you to Thelma Mutete (<a href=\"https://profiles.wordpress.org/thelmachido/\" class=\"mention\"><span class=\"mentions-prefix\">@</span>thelmachido</a>) for sharing her #ContributorStory.</p>\n\n\n\n<img src=\"https://lh4.googleusercontent.com/s24EVZGKbxVeafljPU1ubF1DjIwn98E3-wGx1LD2CWYk7zYQppFhXNpb0aUhGe01TStMdTwXrcYaxBZQHRgZJ10lvW2hsg61Ce37_pBGJuTRQlJ6r9iUxlJtvuDuwLhIvPo1MVEb\" alt=\"HeroPress logo\" />\n\n\n\n<p><em>This post is based on </em><a href=\"https://heropress.com/essays/wordpress-gave-perfect-identity/\"><em>an article originally published on HeroPress.com</em></a><em>, a community initiative created by </em><a href=\"https://profiles.wordpress.org/topher1kenobe/\"><em>Topher DeRosia</em></a><em>. HeroPress highlights people in the WordPress community</em>.</p>\n\n\n\n<p>#ContributorStory #HeroPress</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Jan 2021 16:40:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:28:\"webcommsat AbhaNonStopNewsUK\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:82:\"WPTavern: Gutenberg Contributors Consider Implementing a Bot to Close Stale Issues\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"https://wptavern.com/?p=110562\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:209:\"https://wptavern.com/gutenberg-contributors-consider-implementing-a-bot-to-close-stale-issues?utm_source=rss&utm_medium=rss&utm_campaign=gutenberg-contributors-consider-implementing-a-bot-to-close-stale-issues\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5386:\"<p>Gutenberg project contributors are considering <a href=\"https://make.wordpress.org/core/2021/01/14/stale-issues-in-gutenberg-repository/\">implementing a stale bot</a> to tame the repository&rsquo;s overgrown <a href=\"https://github.com/WordPress/gutenberg/issues\">issues</a> queue, which currently has 2,733 open issues. Stale bots are usually employed to automatically close &ldquo;stale&rdquo; issues and PRs based on a predefined set of parameters for inactivity. </p>\n\n\n\n<p>&ldquo;The current recommendation is to set our policy to a 180-day of no activity, so if no comments or commits are on an issue or PR in 180 days, then the bot will post a comment to the issue alerting the user it will be closed in 7-days due to inactivity,&rdquo; Marcus Kazmierczak proposed.</p>\n\n\n\n<p>One important concern is getting the tone right for the automatically-generated message. When you&rsquo;re employing bots on a widely used open source project, they had better be friendly. A chilly, indifferent bot can unwittingly turn away potential contributors with the wrong kind of messaging. Kazmierczak proposed the following message:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>This is an auto-generated message to let you know that this issue has gone 180 days without any activity and meets the project&rsquo;s definition of stale. This will be auto-closed if there is no new activity over the next 7 days. If the issue is still relevant and active, you can simply comment with a &ldquo;bump&rdquo; to keep it open, or add the &ldquo;[Status] Not Stale&rdquo; label. Thanks for keeping our repository healthy!</p></blockquote>\n\n\n\n<p>Participants in the discussion on the proposal are divided on the best approach. Daniel Llewellyn, one of the most vocal opponents to using a stale bot, contends that an automatically closing issues sends the wrong message. </p>\n\n\n\n<p>&ldquo;If we care about users and that they trust that we will fix their problem then automatically closing their issue gives them the signal that we don&rsquo;t,&rdquo; Llewellyn said.</p>\n\n\n\n<p>&ldquo;If you don&rsquo;t want to fix a problem then it is better for a human to explain why the problem won&rsquo;t be fixed and personally close the issue. Automating this on the assumption that because nobody has commented in a while means it isn&rsquo;t important is bad!&rdquo;</p>\n\n\n\n<p>Joy Reynolds agreed with this assessment, noting that closing issues through any means can be discouraging.</p>\n\n\n\n<p>&ldquo;I&rsquo;ve had issues closed by humans for being stale, also, and it isn&rsquo;t any better,&rdquo; Reynolds said. &ldquo;I&rsquo;ve had issues closed because someone created a new issue on the same thing. This loses all the history and the watchers.</p>\n\n\n\n<p>&ldquo;I&rsquo;ve also had an issue closed at Launchpad for being stale (and their system used only two weeks as a time frame). That served no purpose at all. It only makes people go away, frustrated.&rdquo;</p>\n\n\n\n<p>Kazmierczak reiterated in the comments that the bot can be configured to skip issues labeled as bugs and that issues and PRs can be bumped to reset the 6-month clock.</p>\n\n\n\n<p>&ldquo;The overall goal of the proposal is to improve feedback and responses to issues by ensuring what&rsquo;s there is relevant,&rdquo; Kazmierczak said.</p>\n\n\n\n<p>Auto-closing issues is the most controversial part of the plan. The general consensus in the comments leans towards using the bot for labeling and triaging in order to manually close the issue later.</p>\n\n\n\n<p>&ldquo;My preference would be for a bot to alert humans in a&nbsp;slack&nbsp;channel when a&nbsp;ticket&nbsp;is declared stale and become progressively more insistent until a human responds,&rdquo; Peter Wilson said. </p>\n\n\n\n<p>Milana Cap suggested using a bot to nudge the ticket author as a compromise between &ldquo;being friendly and thoughtful to contributors while keeping maintainers sane.&rdquo;</p>\n\n\n\n<p>Whatever approach contributors land on, excluding tickets marked as bugs is going to be critical for making the stale bot productive. Otherwise, it becomes just a fancy way of kicking the can down the road, delaying the inevitable. </p>\n\n\n\n<p>In a recent post titled &ldquo;<a href=\"https://blog.benwinding.com/github-stale-bots/\">Github Stale Bots: A False Economy</a>,&rdquo; software developer Ben Winding wrote about why stale bots don&rsquo;t deliver what maintainers are aiming to achieve. Based on his experience with the <a href=\"https://github.com/angular/angular/issues\">Angular</a> repository&rsquo;s bot, Winding summarized the stale bot&rsquo;s effect on the issues queue: </p>\n\n\n\n<ol><li>Reduce the metric of&nbsp;<em>Open Issues</em>&nbsp;in github</li><li>Made duplicate issues far more likely</li><li>Increased friction of users reporting that the issue still exists</li><li>Ultimately decreased the quality of the software, as the issues don&rsquo;t accurately reflect reality</li></ol>\n\n\n\n<p>If the Gutenberg repository&rsquo;s stale bot can be configured not to close bugs and used to maximize human involvement, it will be less likely to deter people from reporting issues. Feedback on the <a href=\"https://make.wordpress.org/core/2021/01/14/stale-issues-in-gutenberg-repository/\">proposal</a> is open until January 29, 2021. Kazmierczak is seeking input on the bot&rsquo;s implementation, specifically its time threshold and messaging.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Jan 2021 16:03:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"Matt: New WhiteHouse.gov\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"https://ma.tt/?p=53526\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:41:\"https://ma.tt/2021/01/new-whitehouse-gov/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:2842:\"<p>After you&#8217;ve watched <a href=\"https://www.npr.org/sections/inauguration-day-live-updates/2021/01/20/958743170/poet-amanda-gorman-reads-the-hill-we-climb\">the amazing poem from Amanda Gorman</a>, check out the <a href=\"https://www.whitehouse.gov/\">new WhiteHouse.gov that re-launched today</a> using WordPress &amp; Gutenberg with a number of cool features including dark mode, text zoom, a totally responsive layout, and a Spanish version of the site. The site is clean, <a href=\"https://twitter.com/wesbos/status/1351957829461155849\">fast</a>, and accessible. It&#8217;s exciting and an honor that the online home for the Executive branch is on Open Source software, and I&#8217;m proud WordPress can carry the torch that <a href=\"https://dri.es/whitehouse-gov-using-drupal\">Drupal lit in 2009</a>.</p>\n\n\n\n<p>Besides Gutenberg, poking around I noticed a HTTP header and HTML comment <a href=\"https://usds.gov/apply\">encouraging people to join USDS</a>, and this great #46 easter egg in the theme file:</p>\n\n\n\n<img />\n\n\n\n<p>Anyone notice any other plugins? I haven&#8217;t spoken to him directly but I&#8217;d be shocked if <a href=\"https://nacin.com/\">Nacin</a> wasn&#8217;t involved with this one. I&#8217;m also curious if any of the WP agencies were involved, it has touches of <a href=\"https://10up.com/\">10up</a> but I don&#8217;t see any mention of it on their site or <a href=\"https://twitter.com/10up\">Twitter</a>. <a href=\"https://twitter.com/HoeflerCo/status/1351984719634771970\">Hoefler&amp;Co  credits</a> <a href=\"https://wideeye.co/\">Wide Eye Creative with the design</a>.</p>\n\n\n\n<p>I noticed a few people happy that some previous pages and files on the old site were returning 404 errors, like the <a href=\"https://www.nbcnews.com/news/nbcblk/how-trump-administration-s-1776-report-warps-history-racism-slavery-n1254926\">controversial 1776 report</a>, but on this I think the webmasters of the United States of America should demand better, since <a href=\"https://www.w3.org/Provider/Style/URI\">Cool URIs Don&#8217;t Change</a>. Previous websites are <a href=\"https://www.archives.gov/presidential-libraries/archived-websites\">all saved by the National Archives</a>, but there doesn&#8217;t appear to be any sort of norm for automatically redirecting links that went to any subdirectories or addresses under WhiteHouse.gov. </p>\n\n\n\n<p>There are WP plugins that could help, like <a href=\"https://wordpress.org/plugins/redirection/\">Redirection</a>, but also perhaps the root domain itself could always redirect to a subdomain, like 46.whitehouse.gov, so we&#8217;d have a consistent domain and permalinks for everything, and then each new administration would get a new subdomain.</p>\n\n\n\n<p><a href=\"https://wptavern.com/biden-white-house-sticks-with-wordpress-for-website-relaunch\">More coverage on WP Tavern</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Jan 2021 01:15:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Matt\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"WPTavern: Biden White House Sticks with WordPress for Website Relaunch\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"https://wptavern.com/?p=110712\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:185:\"https://wptavern.com/biden-white-house-sticks-with-wordpress-for-website-relaunch?utm_source=rss&utm_medium=rss&utm_campaign=biden-white-house-sticks-with-wordpress-for-website-relaunch\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3896:\"<img />\n\n\n\n<p>President Joe Biden took office today and unveiled a new <a href=\"https://www.whitehouse.gov/\">whitehouse.gov</a> that has been relaunched on WordPress. The previous administration switched from Drupal to WordPress in 2017, and technologists working with the Biden administration decided to stick with the same CMS. </p>\n\n\n\n<p>In keeping with the multilingual and accessibility features implemented on <a href=\"https://wptavern.com/biden-harris-transition-website-launches-on-wordpress\">the Biden-Harris transition team website</a>, whitehouse.gov launched with toggles for contrast and font size, along with a Spanish language switcher. The relaunched site also includes an <a href=\"https://www.whitehouse.gov/accessibility/\">accessibility statement</a> with a commitment from the administration to work towards conforming to the Web Content Accessibility Guidelines (WCAG) version 2.1, level AA criteria.</p>\n\n\n\n<p>Much of the content and design from the transition website has been preserved. The transition site now forwards to whitehouse.gov, while links to the previous administration&rsquo;s pages land on a 404 page with a link to <a href=\"https://www.archives.gov/presidential-libraries/archived-websites\">archived presidential websites</a>.</p>\n\n\n\n<p>Savvy observers might notice that the typography has been updated from the transition site, flipping the Mercury and Decimal typefaces. Hoefler&amp;Co, the typeface design firm that <a href=\"https://www.typography.com/blog/biden-fonts\">created these typefaces</a> for Biden&rsquo;s 2020 campaign, <a href=\"https://twitter.com/HoeflerCo/status/1351984719634771970\">tweeted</a> about how &ldquo;the serif Mercury felt more like the voice of the institution.&rdquo;  The sans-serif Decimal functions more in a supporting role on the site.</p>\n\n\n\n<p>Web professionals kicked the tires a bit and noticed the site is putting up fairly decent Lighthouse scores.  </p>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\"><a href=\"https://t.co/hoaioTVqE3\">https://t.co/hoaioTVqE3</a> scoring super well on lighthouse, has dark mode and font size selector<br /><br />h8ers gonna be mad that it\'s wordpress and jQuery tho <a href=\"https://t.co/tyMNjdmnTH\">pic.twitter.com/tyMNjdmnTH</a></p>&mdash; Wes Bos (@wesbos) <a href=\"https://twitter.com/wesbos/status/1351957829461155849?ref_src=twsrc%5Etfw\">January 20, 2021</a></blockquote>\n</div>\n\n\n\n<p>Under the hood, code snoopers noticed an advertisement for the <a href=\"https://www.usds.gov/\">U.S. Digital Service</a> (USDS), the group of technologists who maintain many of the federal government&rsquo;s public-facing digital services.</p>\n\n\n\n<div class=\"wp-block-image\"><img /></div>\n\n\n\n<p>In addition to the message from USDS, the site&rsquo;s source code includes a link to the US government&rsquo;s analytics program at <a rel=\"noreferrer noopener\" href=\"https://analytics.usa.gov/\" target=\"_blank\">analytics.usa.gov</a>. Tim Lowden, who manages the federal government&rsquo;s aggregated web analytics initiative, <a href=\"https://twitter.com/tdlowden/status/1351939004342685697\">said</a> this data has been made available for the first time since late 2017.</p>\n\n\n\n<div class=\"wp-block-image\"><img /></div>\n\n\n\n<p>The analytics service records more than 2.5 billion pageviews across federal government websites each month. The data is available to the public, but it&nbsp;<a href=\"https://www.digitalgov.gov/services/dap/common-questions-about-dap-faq/#part-4\">does not track individuals</a>, and&nbsp;<a href=\"https://support.google.com/analytics/answer/2763052?hl=en\">anonymizes the IP addresses</a>&nbsp;of visitors. It shows information for visitors&rsquo; devices, browsers, operating systems, and location broken down into cities and countries. Many of those visiting the site today are from countries other than the U.S. </p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Jan 2021 00:20:24 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"Gary: WordPress Importers: Free (as in Speech)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"https://pento.net/?p=5478\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://pento.net/2021/01/21/wordpress-importers-free-as-in-speech/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8227:\"<p>Back at<a href=\"https://pento.net/2021/01/18/wordpress-importers-stating-the-problem/\"> the start of this series</a>, I listed four problems within the scope of the WordPress Importers that we needed to address. Three of them are largely technical problems, which I covered in previous posts. In wrapping up this series, I want to focus exclusively on the fourth problem, which has a philosophical side as well as a technical one — but that does not mean we cannot tackle it!</p>\n\n\n\n<div class=\"wp-block-group alignwide is-style-twentytwentyone-border\"><div class=\"wp-block-group__inner-container\">\n<p class=\"has-text-align-center\">Problem Number 4</p>\n\n\n\n<p class=\"alignwide has-extra-large-font-size\"><strong>Some services work against their customers, and actively prevent site owners from controlling their own content.</strong></p>\n</div></div>\n\n\n\n<p>Some services are merely inconvenient: they provide exports, but it often involves downloading a bunch of different files. Your CMS content is in one export, your store products are in another, your orders are in another, and your mailing list is in yet another. It&#8217;s not ideal, but they at least let you get a copy of your data.</p>\n\n\n\n<p>However, there&#8217;s another class of services that actively work against their customers. It&#8217;s these services I want to focus on: the services that don&#8217;t provide any ability to export your content — effectively locking people in to using their platform. We could offer these folks an escape! The aim isn’t to necessarily make them use WordPress, it’s to give them a way out, if they want it. Whether they choose to use WordPress or not after that is immaterial (though I certainly hope they would, of course). The important part is freedom of choice.</p>\n\n\n\n<p>It&#8217;s worth acknowledging that this is a different approach to how WordPress has historically operated in relation to other CMSes. We provide <em>importers</em> for many CMSes, but we previously haven&#8217;t written <em>exporters</em>. However, I don&#8217;t think this is a particularly large step: for CMSes that already provide exports, we&#8217;d continue to use those export files. This is focussed on the few services that try to lock their customers in.</p>\n\n\n\n<h2>Why Should WordPress Take This On?</h2>\n\n\n\n<p>There are several aspects to <em>why</em> we should focus on this.</p>\n\n\n\n<p>First of all, it&#8217;s the <a href=\"https://wordpress.org/about/\">the WordPress mission</a>. Underpinning every part of WordPress is the simplest of statements: </p>\n\n\n\n<p class=\"has-text-align-center\"><strong>Democratise Publishing</strong></p>\n\n\n\n<p class=\"has-text-align-center\"><em>The freedom to build. The freedom to change. The freedom to share.</em></p>\n\n\n\n<p>These freedoms are the pillars of a Free and Open Web, but they’re not invulnerable: at times, they need to be defended, and that needs people with the time and resources to offer a defence.</p>\n\n\n\n<p>Which brings me to my second point: WordPress has the people who can offer that defence! The WordPress project has so many individuals working on it, from such a wide variety of backgrounds, we&#8217;re able to take on a vast array of projects that a smaller CMS just wouldn&#8217;t have the bandwidth for. That&#8217;s not to say that we can do <em>everything</em>, but when there&#8217;s a need to defend the entire ecosystem, we&#8217;re able to devote people to the cause.</p>\n\n\n\n<p>Finally, it’s important to remember that WordPress doesn’t exist in a vacuum, we’re part of a broad ecosystem which can only exist through the web remaining open and free. By encouraging all CMSes to provide proper exports, and implementing them for those that don’t, we help keep our ecosystem healthy.</p>\n\n\n\n<p>We have the ability to take on these challenges, but we have a responsibility that goes alongside. We can&#8217;t do it solely to benefit WordPress, we need to make that benefit available to the entire ecosystem. This is why it&#8217;s important to<a href=\"https://pento.net/2021/01/20/wordpress-importers-defining-a-schema/\"> define a WordPress export schema</a>, so that any CMS can make use of the export we produce, not just WordPress. If you’ll excuse the imagery for a moment, we can be the knight in shining armour that frees people — then gives them the choice of what they do with that freedom, without obligation.</p>\n\n\n\n<h2>How Can We Do It?</h2>\n\n\n\n<p>Moving on to the technical side of this problem, I can give you some good news: the answer is definitely <em>not</em> screen scraping. <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f604.png\" alt=\"😄\" class=\"wp-smiley\" /> Scraping a site is fragile, impossible to transform into the full content, and provides an incomplete export of the site: anything that&#8217;s only available in the site dashboard can&#8217;t be obtained through scraping.</p>\n\n\n\n<p>I&#8217;ve recently been experimenting with an alternative approach to solving this problem. Rather than trying to create something resembling a traditional exporter, it turns out that modern CMSes provide the tools we need, in the form of REST APIs. All we need to do is call the appropriate APIs, and collate the results. The fun part is that we can authenticate with these APIs as the site owner, by calling them from a browser extension! So, that’s what I’ve been experimenting with, and it’s showing a lot of promise.</p>\n\n\n\n<p>If you&#8217;re interested in playing around with it, <a href=\"https://github.com/pento/free-as-in-speech\">the experimental code is living in this repository</a>. It&#8217;s a simple proof of concept, capable of exporting the text content of a blog on a Wix site, showing that we can make a smooth, comprehensive, easy-to-use exporter for any Wix site owner.</p>\n\n\n\n<img width=\"904\" height=\"446\" src=\"https://pento.net/wp-content/uploads/2021/01/Screen-Shot-2021-01-20-at-5.26.38-pm.png\" alt=\"Screenshot of the \" />\n\n\n\n<p>Clicking the export button starts a background script, which calls Wix&#8217;s REST APIs <em>as the site owner</em>, to get the original copy of the content. It then packages it up, and presents it as a WXR file to download.</p>\n\n\n\n<img width=\"972\" height=\"948\" src=\"https://pento.net/wp-content/uploads/2021/01/Screen-Shot-2021-01-20-at-5.27.38-pm.png\" alt=\"Screenshot of a Firefox download dialog, showing a Wix site packaged up as a WXR file.\" class=\"wp-image-5528\" />\n\n\n\n<p>I&#8217;m really excited about how promising this experiment is. It can ultimately provide a full export of any Wix site, and we can add support for other CMS services that choose to artificially lock their customers in.</p>\n\n\n\n<h2>Where Can I Help?</h2>\n\n\n\n<p>If you’re a designer or developer who’s excited about working on something new, head on over to the repository and <a href=\"https://github.com/pento/free-as-in-speech/issues\">check out the open issues</a>: if there’s something that isn’t already covered, feel free to open a new issue.</p>\n\n\n\n<p>Since this is new ground for a WordPress project, both technically and philosophically, I&#8217;d love to hear more points of view. It’s being discussed in <a href=\"https://make.wordpress.org/core/2021/01/19/dev-chat-agenda-for-january-20-2021-january-21-2021/#comment-40563\">the WordPress Core Dev Chat this week</a>, and you can also let me know what you think in the comments!</p>\n\n\n\n<div class=\"wp-block-group is-style-twentytwentyone-border\"><div class=\"wp-block-group__inner-container\">\n<p><em>This post is part of a series, talking about the WordPress Importers, their history, where they are now, and where they could go in the future.</em></p>\n\n\n\n<ul><li><em><a href=\"https://pento.net/2021/01/18/wordpress-importers-stating-the-problem/\">Part 1: Stating the Problem</a></em></li><li><em><a href=\"https://pento.net/2021/01/19/wordpress-importers-getting-our-house-in-order/\">Part 2: Getting Our House in Order</a></em></li><li><em><a href=\"https://pento.net/2021/01/20/wordpress-importers-defining-a-schema/\">Part 3: Defining a Schema</a></em></li><li><a href=\"https://pento.net/2021/01/21/wordpress-importers-free-as-in-speech/\"><em>Part 4: Free (as in Speech)</em></a></li></ul>\n\n\n\n<p></p>\n</div></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Thu, 21 Jan 2021 00:14:45 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Gary\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:102:\"WPTavern: First Round of the FSE Outreach Program Concludes, Identifies Template-Editing Mode Problems\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"https://wptavern.com/?p=110638\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:247:\"https://wptavern.com/first-round-of-the-fse-outreach-program-concludes-identifies-template-editing-mode-problems?utm_source=rss&utm_medium=rss&utm_campaign=first-round-of-the-fse-outreach-program-concludes-identifies-template-editing-mode-problems\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5309:\"<p class=\"has-drop-cap\">The Full Site Editing (FSE) <a href=\"https://wptavern.com/help-steer-the-future-of-wordpress-via-the-fse-outreach-program\">Outreach Program</a> has now concluded its <a href=\"https://make.wordpress.org/test/2021/01/15/fse-program-template-editing-testing-summary/\">first round of testing</a>. Its first focus area was centered on the template-editing mode introduced in <a href=\"https://make.wordpress.org/core/2020/12/23/whats-new-in-gutenberg-23-december/\">Gutenberg 9.6</a>. The volunteers involved with the project identified several pain points.</p>\n\n\n\n<p>Gutenberg 9.6 added a new button that allows end-users, provided they are using a block-based theme, to switch between editing their post and the template that displays the post. As Josepha Haden <a href=\"https://wptavern.com/gutenberg-9-3-provides-indicator-of-where-full-site-editing-is-going-a-future-without-widgets-and-customizer-screens\">said last year</a>, the ultimate goal is to &ldquo;consolidate down to just one beautiful, intuitive interface.&rdquo; Essentially, this new feature merges content and design in a way we have not seen in core WordPress before. It is a step toward that lofty goal.</p>\n\n\n\n<p>Traditionally, WordPress has always separated content from design. However, these two aspects of websites are continually merging together. There is a desire for this. The adoption of page builders over the last half-decade or so has made it abundantly clear.</p>\n\n\n\n<p>The biggest issue with this new template mode is that users need a working knowledge of the WordPress template system to understand the ramifications of their edits. One of the primary questions of the focus area was whether it was clear that the user was making large-scale changes to all posts when switching to the template-editing mode.</p>\n\n\n\n<p>&ldquo;I believe it was not clear enough how those changes could impact the site,&rdquo; <a href=\"https://make.wordpress.org/test/2020/12/23/fse-program-testing-call-1-template-editing/#comment-1307\">wrote H&eacute;ctor Prieto in response</a>. &ldquo;If you don&rsquo;t already know how templates, template parts, and global blocks like Site Title work, you might not understand how your editing will affect the rest of the site.&rdquo;</p>\n\n\n\n<p>Switching modes does create a quick popup at the bottom left of the screen that reads:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Editing template. Changes made here affect all posts and pages that use the template.</p></blockquote>\n\n\n\n<p>It is easy to miss before it fades away. There is a ticket to <a href=\"https://github.com/WordPress/gutenberg/issues/28175\">stick this message</a> on the screen and allow the user to dismiss it. There is also another ticket for clarifying when a user is <a href=\"https://github.com/WordPress/gutenberg/issues/27849\">editing a template vs. content</a>.</p>\n\n\n\n<img />Entering template-editing mode from the post editor.\n\n\n\n<p>Gutenberg&rsquo;s current method is different than what you might see in a typical page builder. When switching to template-editing mode, the user is no longer editing that single post&rsquo;s front-end output. Instead, they are making global edits. A page builder would generally save any customizations to that page alone. If this remains the same, it could be a hurdle for the average user to clear.</p>\n\n\n\n<p>A template creation feature needs to be a part of this new mode. Users should be able to fork or clone their existing single post template and save it as a new template specific to that post. Or, maybe hand them a way to save it as a reusable template (i.e., &ldquo;page&rdquo; template). Paal Joachim Romdahl <a href=\"https://make.wordpress.org/test/2020/12/23/fse-program-testing-call-1-template-editing/#comment-1303\">shared a similar thought</a>, likening it to the &ldquo;Save As&hellip;&rdquo; feature commonly found in computer programs.</p>\n\n\n\n<p>I do question whether users should be able to edit global templates while editing a single post. The two are only related insofar as the template displays the post content on the front end. WordPress should explore any type of design work from the post-editing screen as, first and foremost, specific to that post.</p>\n\n\n\n<p>The volunteers also identified other issues. Applying changes to the template and saving drops the user back into the post editor. The &ldquo;cancel&rdquo; button is tough to find &mdash; it is in a different location than where the user clicked to go into template-editing mode.</p>\n\n\n\n<p>Switching between post and template editing feels like an FSE 2.0 type of thing. The development team has enough issues on its plate with the normal site editor. It is a far cry from being a viable, production-ready product. The team&rsquo;s focus should be on working the kinks out of that system before merging it with the post editor. Crawl before you walk. Walk before you run.</p>\n\n\n\n<p>However, I am willing to be pleasantly surprised. In the long run, it will probably be a good thing that we are getting an early look at what these two different pieces of WordPress will look like working in conjunction.</p>\n\n\n\n<p>This is also why participation in the FSE Outreach Program is vital. The community needs this more formal type of process to identify areas that need improvement.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 20 Jan 2021 23:17:21 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Justin Tadlock\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:42:\"HeroPress: Changing Careers Into WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://heropress.com/?post_type=heropress-essays&p=3454\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:136:\"https://heropress.com/essays/changing-careers-into-wordpress/#utm_source=rss&utm_medium=rss&utm_campaign=changing-careers-into-wordpress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:6844:\"<img width=\"960\" height=\"480\" src=\"https://s20094.pcdn.co/wp-content/uploads/2022/01/012021-min.jpg\" class=\"attachment-large size-large wp-post-image\" alt=\"Pull Quote: With WordPress skills, you have more concrete skills to offer.\" /><p>If you’re looking to change careers into technology, WordPress is a great way to do it.</p>\n<p>In 2013, I was in a career counselor’s office. Just realizing that I needed to change careers out of music, almost the only thing I had known for the last 20 years:</p>\n<a href=\"https://s20094.pcdn.co/wp-content/uploads/2022/01/trombone-namm.jpg\"><img /></a>At NAMM in Anaheim, California\n<p>Aside from feeling like a huge failure, I knew I’d need a lot of luck to get a job.</p>\n<p>Someone would have to take a big chance on me.</p>\n<p>But there were a few problems.</p>\n<p>I was terrified of talking to strangers, much less asking them big favors. And I had almost no traditionally useful skills.</p>\n<p>Enter WordPress.</p>\n<h2>Lots Of Options</h2>\n<p>When you’re changing careers, you’ll want skills that will help no matter what you end up doing.</p>\n<p>You don’t want to deep-dive into calculus and find out that it won’t help.</p>\n<p>Learning WordPress is perfect.</p>\n<p>If you get really interested in the technical side, you can be a JS or PHP developer.</p>\n<p>If you really like content creation, that’s also great. You can start a blog or work in marketing.</p>\n<p>If none of it interests you, at least you can help people set up a website as you look for another career.</p>\n<p>So soon after meeting with the career counselor, I took Zac Gordon’s course on WordPress Theme Development.</p>\n<p>I wrote a theme based on his course, and really liked how WordPress worked.</p>\n<p>He taught me to build sites, and later write plugins.</p>\n<a href=\"https://s20094.pcdn.co/wp-content/uploads/2022/01/with-zac-gordon.jpg\"><img /></a>Zac Gordon with XWP\n<h2>Invite Yourself To The Party</h2>\n<p>The great thing about WordPress is that you can contribute right away.</p>\n<p>With some careers, you need somebody to take a chance on you before you can do much.</p>\n<p>To get experience as an investment banker or business consultant, you probably need to actually have the job.</p>\n<p>But with WordPress, you can invite yourself.</p>\n<p>You can open pull requests to Core or Gutenberg without anyone asking.</p>\n<p>You can deploy plugins to wp.org that real people use, without having a college degree.</p>\n<p>With this growing experience, I applied online to <a href=\"https://xwp.co/\">XWP</a>.</p>\n<p>Weston Ruter responded right away, and was really helpful.</p>\n<p>I started opening simple PRs to “help” with the Customizer work.</p>\n<p>In reality, my work might have slowed things down, and was really simple.</p>\n<p>But I didn’t have to wait to be invited. I invited myself to the party, and one of the PRs was merged into Core.</p>\n<p>Later, when I interviewed with <a href=\"https://xwp.co/\">XWP</a> and got the job, I could show that I had a little experience working with other developers.</p>\n<a href=\"https://s20094.pcdn.co/wp-content/uploads/2022/01/with-xwp-1.jpg\"><img /></a>XWP At WordCamp US Contributor Day, 2017\n<p>It’s still embarrassing looking back at the work I did. But WordPress allows you to contribute, regardless of your experience level.</p>\n<p>Years later, when I lived in Mexico City, one of my friends got interested in technology.</p>\n<p>He was like me. He had a degree in an unrelated field, and wanted a great career.</p>\n<p>So I showed him how much opportunity WordPress has.</p>\n<p>He did something similar to what I did.</p>\n<p>He opened PRs to an agency’s repos, and the agency asked him if he wanted to talk about a job, without him needing to apply. Years later, he’s still doing really well at his job.</p>\n<p>I did very little, other than point him to a huge opportunity: WordPress.</p>\n<h2>Concrete Skills</h2>\n<p>Changing careers is really awkward.</p>\n<p>You read about networking, which seems like you’re asking strangers for favors and sending spam DMs.</p>\n<p>You also learn to reframe things as transferable skills.</p>\n<p>So if you’ve done hard things, you can say you’re “comfortable with ambiguity.”</p>\n<p>But with WordPress skills, you have more concrete skills to offer.</p>\n<p>It’s less awkward explaining to someone why they should take a chance on you.</p>\n<p>You’ve shown you’re committed to your career path by your portfolio of plugins.</p>\n<p>And you don’t have to send spam DMs on LinkedIn.</p>\n<p>In 2014, I went to my first WordPress meetup, <a href=\"https://www.meetup.com/WPLosAngeles\">WordPress Los Angeles</a>. I was nervous, but I wasn’t trying to take any value.</p>\n<p>I could even answer a few questions.</p>\n<p>Renee Johnson and I met there. We even reunited in WordCamp Europe and Mexico City several years later when I lived there:</p>\n<a href=\"https://s20094.pcdn.co/wp-content/uploads/2022/01/with-renee.jpg\"><img /></a>Yani Jimenez and Renee Johnson, Mexico City\n<p>With WordPress skills, you can flip from taking to giving value. Everything is much less awkward.</p>\n<p>As you probably know, there are many self-taught developers in WordPress.</p>\n<p>College degrees rarely come up in hiring conversations, at least in my experience.</p>\n<p>And I’ve found WordPress very accepting of different career backgrounds. Matt Mullenweg was a musician, famously naming every release after a jazz musician.</p>\n<p>People in WordPress are very understanding about changing careers.</p>\n<p>Now, I don’t hide it, and it’s rarely more than a footnote in conversations.</p>\n<h2>Mentorship</h2>\n<p>Don’t go it alone.</p>\n<p>It’s easy to think that you can just take online courses and eventually be ready for a job.</p>\n<p>But code reviews are one of the main ways you’ll learn. And people in WP want to help.</p>\n<p>If you contribute a few PRs to someone’s GitHub repo, they’ll probably do a quick code review of your own plugin or theme.</p>\n<p>Weston was really helpful in doing a detailed review of my theme.</p>\n<p>You also can learn a lot contributing to Gutenberg or other plugins.</p>\n<p>They’ll give you detailed reviews. And you’ll basically get the same experience as if you were getting paid.</p>\n<p>But if I were to do this again, I’d also look for more formal mentorship.</p>\n<p>Hiring someone to review your plugins and themes would probably help.</p>\n<h2>Nothing To Fix</h2>\n<p>There’s a saying in marketing “what you can’t fix, you feature.”</p>\n<p>In WordPress, you don’t have to fix your non-traditional career background.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://heropress.com/essays/changing-careers-into-wordpress/\">Changing Careers Into WordPress</a> appeared first on <a rel=\"nofollow\" href=\"https://heropress.com\">HeroPress</a>.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 20 Jan 2021 17:50:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Ryan Kienstra\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"Gary: WordPress Importers: Defining a Schema\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"https://pento.net/?p=5495\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"https://pento.net/2021/01/20/wordpress-importers-defining-a-schema/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:8792:\"<p>While schemata are usually implemented using language-specific tools (eg, XML uses <a href=\"https://www.w3.org/standards/xml/schema\">XML Schema</a>, JSON uses <a href=\"https://json-schema.org/\">JSON Schema</a>), they largely use the same concepts when talking about data. This is rather helpful, we don&#8217;t need to make a decision on <a href=\"https://pento.net/2021/01/19/wordpress-importers-getting-our-house-in-order/\">data formats</a> before we can start thinking about how the data should be arranged.</p>\n\n\n\n<p><em>Note: Since these concepts apply equally to all data formats, I&#8217;m using &#8220;WXR&#8221; in this post as shorthand for &#8220;the structured data section of whichever file format we ultimately use&#8221;, rather than specifically referring to the existing WXR format.</em> <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" /></p>\n\n\n\n<h2>Why is a Schema Important?</h2>\n\n\n\n<p>It&#8217;s fair to ask why, if the WordPress Importers have survived this entire time <em>without</em> a formal schema, why would we need one now?</p>\n\n\n\n<p>There are two major reasons why we haven&#8217;t needed one in the past:</p>\n\n\n\n<ul><li>WXR has remained largely unchanged in the last 10 years: there have been small additions or tweaks, but nothing significant. There&#8217;s been no need to keep track of changes.</li><li>WXR is currently very simple, with just a handful of basic elements. In a recent experiment, I was able to implement a JavaScript-based WXR generator in just a few days, entirely by referencing <a href=\"https://core.trac.wordpress.org/browser/trunk/src/wp-admin/includes/export.php\">the Core implementation</a>.</li></ul>\n\n\n\n<p>These reasons are also why it would help to implement a schema for the future:</p>\n\n\n\n<ul><li>As work on WXR proceeds, there will likely need to be substantial changes to what data is included: adding new fields, modifying existing fields, and removing redundant fields. Tracking these changes helps ensure any WXR implementations can stay in sync.</li><li>These changes will result in a more complex schema: relying on the source to re-implement it will become increasingly difficult and error-prone. Following Gutenberg&#8217;s lead, it&#8217;s likely that we&#8217;d want to provide official libraries in both PHP and JavaScript: keeping them in sync is best done from a source schema, rather than having one implementation copy the other.</li></ul>\n\n\n\n<p>Taking the time to plan out a schema now gives us a solid base to work from, and it allows for future changes to happen in a reliable fashion.</p>\n\n\n\n<h2>WXR for all of WordPress</h2>\n\n\n\n<p>With a well defined schema, we can start to expand what data will be included in a WXR file.</p>\n\n\n\n<h3>Media</h3>\n\n\n\n<p>Interestingly, many of the challenges around media files are less to do with WXR, and more to do with importer capabilities. The biggest headache is retrieving the actual files, which the importer currently handles by trying to retrieve the file from the remote server, as defined in the <code>wp:attachment_url</code> node. In context, this behaviour is understandable: 10+ years ago, personal internet connections were too slow to be moving media around, it was better to have the servers talk to each other. It&#8217;s a useful mechanism that we should keep as a fallback, but the more reliable solution is to include the media file with the export.</p>\n\n\n\n<h3>Plugins and Themes</h3>\n\n\n\n<p>There are two parts to plugins and themes: the code, and the content. Modern WordPress sites <em>require</em> plugins to function, and most are customised to suit their particular theme.</p>\n\n\n\n<p>For exporting the code, I wonder if a tiered solution could be applied:</p>\n\n\n\n<ul><li>Anything from WordPress.org would just need their slug, since they can be re-downloaded during import. Particularly as WordPress continues to move towards an auto-updated future, modified versions of plugins and themes are explicitly not supported.</li><li>Third party plugins and themes would be given a filter to use, where they can provide a download URL that can be included in the export file.</li><li>Third party plugins/themes that don’t provide a download URL would either need to be skipped, or zipped up and included in the export file.</li></ul>\n\n\n\n<p>For exporting the content, WXR already includes custom post types, but doesn&#8217;t include custom settings, or custom tables. The former should be included automatically, and the latter would likely be handled by an appropriate action for the plugin to hook into.</p>\n\n\n\n<h3>Settings</h3>\n\n\n\n<p>There are a currently handful of special settings that are exported, but (as I just noted, particularly with plugins and themes being exported) this would likely need to be expanded to included most items in&nbsp;<code>wp_options</code>.</p>\n\n\n\n<h3>Users</h3>\n\n\n\n<p>Currently, the bare minimum information about users who’ve authored a post is included in the export. This would need to be expanded to include more user information, as well as users who aren’t post authors.</p>\n\n\n\n<h2>WXR for <em>parts</em> of WordPress</h2>\n\n\n\n<p>The modern use case for importers isn&#8217;t just to handle a full site, but to handle keeping sites in sync. For example, most news organisations will have a staging site (or even several layers of staging!) which is synchronised to production.</p>\n\n\n\n<p>While it&#8217;s well outside the scope of this project to directly handle every one of these use cases, we should be able to provide the framework for organisations to build reliable platforms on. Exports should be repeatable, objects in the export should have unique identifiers, and the importer should be able to handle any subset of WXR.</p>\n\n\n\n<h2>WXR Beyond WordPress</h2>\n\n\n\n<p>Up until this point, we&#8217;ve really been talking about&nbsp;WordPress→WordPress migrations, but I think WXR is a useful format beyond that. Instead of just containing direct exports of the data from particular plugins, we could also allow it to contain &#8220;types&#8221; of data. This turns WXR into an intermediary language, exports can be created from any source, and imported into WordPress.</p>\n\n\n\n<p>Let&#8217;s consider an example. Say we create a tool that can export a Shopify, Wix, or GoDaddy site to WXR, how would we represent an online store in the WXR file? We don&#8217;t want to export in the format that any particular plugin would use, since a WordPress Core tool shouldn&#8217;t be advantaging one plugin over others.</p>\n\n\n\n<p>Instead, it would be better if we could format the data in a platform-agnostic way, which plugins could then implement support for. As luck would have it, <a href=\"https://schema.org/\">Schema.org</a> provides exactly the kind of data structure we could use here. It&#8217;s been <a href=\"https://schema.org/docs/releases.html\">actively maintained for nearly nine years</a>, it supports a <a href=\"https://schema.org/docs/schemas.html\">wide variety of data types</a>, and is intentionally platform-agnostic.</p>\n\n\n\n<p>Gazing into my crystal ball for a moment, I can certainly imagine a future where plugins could implement and declare support for importing certain data types. When handling such an import (assuming one of those plugins wasn&#8217;t already installed), the WordPress Importer could offer them as options during the import process. This kind of seamless integration allows WordPress to show that it offers the same kind of fully-featured site building experience that modern CMS services do.</p>\n\n\n\n<p>Of course, reality is never quite as simple as crystal balls and magic wands make them out to be. We have to contend with services that provide incomplete or fragmented exports, and there are even services that deliberately don&#8217;t provide exports at all. In the next post, I&#8217;ll be writing about why we should address this problem, and how we might be able to go about it.</p>\n\n\n\n<div class=\"wp-block-group is-style-twentytwentyone-border\"><div class=\"wp-block-group__inner-container\">\n<p><em>This post is part of a series, talking about the WordPress Importers, their history, where they are now, and where they could go in the future.</em></p>\n\n\n\n<ul><li><em><a href=\"https://pento.net/2021/01/18/wordpress-importers-stating-the-problem/\">Part 1: Stating the Problem</a></em></li><li><em><a href=\"https://pento.net/2021/01/19/wordpress-importers-getting-our-house-in-order/\">Part 2: Getting Our House in Order</a></em></li><li><em><a href=\"https://pento.net/2021/01/20/wordpress-importers-defining-a-schema/\">Part 3: Defining a Schema</a></em></li><li><a href=\"https://pento.net/2021/01/21/wordpress-importers-free-as-in-speech/\"><em>Part 4: Free (as in Speech)</em></a></li></ul>\n\n\n\n<p></p>\n</div></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 19 Jan 2021 23:13:37 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Gary\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"WPTavern: Custom Layouts Plugin Creates a Posts Display System for Both the Classic and Block Editors\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"https://wptavern.com/?p=110409\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:247:\"https://wptavern.com/custom-layouts-plugin-creates-a-posts-display-system-for-both-the-classic-and-block-editors?utm_source=rss&utm_medium=rss&utm_campaign=custom-layouts-plugin-creates-a-posts-display-system-for-both-the-classic-and-block-editors\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5383:\"<p class=\"has-drop-cap\">Ross Morsali, via his brand Code Amp, released the <a href=\"https://wordpress.org/plugins/custom-layouts/\">Custom Layouts</a> plugin last week. The plugin&rsquo;s goal is to provide a visual post layout builder for users of both the block and classic editors.</p>\n\n\n\n<p>For end-users, this is yet another choice between the multitude of plugins for displaying posts. After years of new plugins launching in this space, it would seem that there would be a clear front-runner, but developers are still trying to tame this wild and complex feature. The Custom Layouts plugin has its own approach, and it is worth giving it a quick spin to see if it suits you.</p>\n\n\n\n<p>I have written extensively about the <a href=\"https://wptavern.com/gutenberg-9-6-introduces-drag-and-drop-blocks-and-global-inheritance-for-the-query-block\">upcoming Query block</a> and its role in the <a href=\"https://wptavern.com/understanding-the-query-block-and-its-importance-in-site-editing\">future of WordPress</a>. However, it is necessary to look at alternative solutions for displaying posts via the block editor. The Gutenberg development team should take note of the things that work and those that do not.</p>\n\n\n\n<p>For developers, the plugin is a noteworthy experiment that uses the block editor component system outside of the actual editor. Custom Layouts uses these various components on its custom Layout and Template Editor screens.</p>\n\n\n\n<p>The plugin is a product of Morsali learning React and the block system in the last year and a half. &ldquo;Working with Gutenberg and the Block Editor as a developer is a far superior experience to the old paradigm (the classic editor) &mdash; the learning curve is definitely greater, but once you get over the hump it seems the future is bright,&rdquo; he wrote in the <a href=\"https://codeamp.com/creating-the-custom-layouts-plugin/\">plugin&rsquo;s announcement post</a>. &ldquo;I also love the fact that we don&rsquo;t actually need to be using the Block Editor to use Gutenberg components &mdash; that means we can still build what we want and how we want it (providing we&rsquo;re using React), whilst keeping the UI in tune with the rest of WordPress.&rdquo;</p>\n\n\n\n<h2>How the Plugin Works</h2>\n\n\n\n<img />Template editor screen.\n\n\n\n<p class=\"has-drop-cap\">Custom Layouts takes a different route than similar plugins, splitting its components into different screens. The terminology can be confusing to the uninitiated. The plugin introduces two parts that serve as the foundation of its system:</p>\n\n\n\n<ul><li><strong>Templates:</strong> Handles the design of individual posts.</li><li><strong>Layouts:</strong> Controls queried posts and their layout.</li></ul>\n\n\n\n<p>I have had a beta version of the plugin since late December. This has given me three weeks to decide whether I like the approach. On the one hand, the plugin caters to two different user bases. One set can implement their layouts via the Custom Layouts block. Those on the classic editor can use the Layout Editor screen. Both share the Template Editor.</p>\n\n\n\n<img />Creating a three-column grid layout.\n\n\n\n<p>The plugin&rsquo;s system is a good option for users of the classic editor. It comes with a visual interface they would otherwise not have. It also provides a shortcode for easy copying/pasting into the post editor.</p>\n\n\n\n<p>For users of the block editor, having a separate screen for the template builder will likely feel unnatural. Because the block editor is a visual interface itself, the multiple screens create a disjointed atmosphere that never feels <em>right</em>.</p>\n\n\n\n<p>However, there is a solution for that in the plugin. I recommend users skip the Template Editor and Layout Editor screens altogether. The Custom Layouts block serves as an alternative layout builder in the block editor. Plus, users can edit existing templates via a popup overlay or even create new ones without ever leaving the post-editing screen. </p>\n\n\n\n<img />Overlay for editing a template.\n\n\n\n<p>Building everything from the post editor feels like it should feel. Users get more of that instant feedback that they are accustomed to through the block editor.</p>\n\n\n\n<p>There are benefits to the multi-component system. Separating the template builder means that users can build and reuse a specific design from a single source. They can also update individual templates, which will subsequently apply to all uses of those templates across the site.</p>\n\n\n\n<p>The other benefit is that end-users are not overloaded with choices. Building a query-related block, widget, shortcode, or similar component is fraught with complexity. This is because there are three pieces of laying out a list of posts: the query to load them, the overall layout, and the design of the individual posts. Putting options for each of these pieces into the block inspector, for example, means creating a balance between sacrificing some choices and providing every possible setting to the user. This balancing act is what drove Morsali toward separating the components of the plugin.</p>\n\n\n\n<p>On the whole, Custom Layouts is a solid plugin. The downside is that there is a little bit of a learning curve because it serves two audiences. Users will need to figure out which workflow best suits them first. Once they figure that out, the plugin is pretty nice to work with.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 19 Jan 2021 21:48:33 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:14:\"Justin Tadlock\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"WPTavern: WordPress for Android Previews New Story Posts Feature, Now in Public Beta\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"https://wptavern.com/?p=110474\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:211:\"https://wptavern.com/wordpress-for-android-previews-new-story-posts-feature-now-in-public-beta?utm_source=rss&utm_medium=rss&utm_campaign=wordpress-for-android-previews-new-story-posts-feature-now-in-public-beta\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:3697:\"<p>WordPress users on Android may have noticed a new prompt in the mobile app for publishing Story posts. This feature is now in public beta in the Android app, ahead of an upcoming launch on the WordPress iOS app. Stories will also coming to the Block editor on WordPress.com in early 2021. </p>\n\n\n\n<p>Early access to Story posts is available in version 16.3+ of the app, released in mid-December. The prompt appears at the bottom of the site management screen. Selecting a Story post immediately takes you to your phone&rsquo;s media where you can add photos or a video.</p>\n\n\n\n<ul><li class=\"blocks-gallery-item\"><img /></li><li class=\"blocks-gallery-item\"><img /></li></ul>\n\n\n\n<p><br />The mobile app&rsquo;s implementation of the Stories feature is different from other platforms, like Instagram and Facebook, in several key ways. Most importantly, WordPress stories are not ephemeral. They live permanently on your site and anyone can view them after they are published. WordPress.com&rsquo;s <a href=\"https://wordpress.com/support/story-block/\">documentation</a> for the block highlights a few differences: </p>\n\n\n\n<ul><li>Posts with Stories won&rsquo;t disappear after 24 hours.&nbsp;</li><li>The Story content can be added to and edited after publishing.&nbsp;</li><li>Anyone visiting your site can view the Story.&nbsp;</li><li>You can share your Story on any platform using the post&nbsp;<a href=\"https://wordpress.com/support/permalinks-and-slugs/\">permalink</a>.</li></ul>\n\n\n\n<p>After testing the feature, I can confirm a few more differences. While the WordPress app&rsquo;s implementation transcends other platforms&rsquo; limitations on the duration of the story&rsquo;s visibility, it lacks basic features that users have come to expect from other apps. It doesn&rsquo;t support animated gifs, effects, location, stickers, music, and other embellishments that make stories such a creative social medium. At the moment, the only thing you can do is add colored text with a background.</p>\n\n\n\n<ul><li class=\"blocks-gallery-item\"><img /></li><li class=\"blocks-gallery-item\"><img /></li></ul>\n\n\n\n<p>Videos work as Stories, too, but they don&rsquo;t seem to have the same preview with a thumbnail image. It&rsquo;s just a generic placeholder for now. That may be something the team is still working on, but I logged an <a href=\"https://github.com/wordpress-mobile/WordPress-Android/issues/13809\">issue</a> on GitHub for it, in case it&rsquo;s a bug. </p>\n\n\n\n<ul><li class=\"blocks-gallery-item\"><img /></li><li class=\"blocks-gallery-item\"><img /></li></ul>\n\n\n\n<p>In the interest of owning your own content, I can see it being useful to create stories on your own website and share them to other networks. The current implementation is basically a fullscreen slideshow. It is not yet more compelling than what social networks offer, but it looks like WordPress for iOS <a href=\"https://github.com/tumblr/kanvas-ios/projects/1\">plans to expand on these features</a> using the open source <a href=\"https://github.com/tumblr/kanvas-ios\">Kanvas library</a> from Tumblr.</p>\n\n\n\n<p>Kanvas makes it possible to add&nbsp;effects, drawings, text, stickers, and make GIFs from existing media or the camera. If you have ever used the&nbsp;<a href=\"https://apps.apple.com/us/app/tumblr/id305343404\">Tumblr iOS app</a> then you have seen Kanvas in action in the camera, media editor, GIF maker, and media posting tool. It should make for a more exciting Stories implementation on iOS, with features on par with what users have come to expect from other platforms. Something similar for Android may be in the works and this post will be updated as soon as we receive comments from the mobile team.</p>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 18 Jan 2021 23:55:06 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:13:\"Sarah Gooding\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:10;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:53:\"Gary: WordPress Importers: Getting Our House in Order\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:25:\"https://pento.net/?p=5465\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:76:\"https://pento.net/2021/01/19/wordpress-importers-getting-our-house-in-order/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:15440:\"<p>The <a href=\"https://pento.net/2021/01/18/wordpress-importers-stating-the-problem/\">previous post</a> talked about the broad problems we need to tackle to bring our importers up to speed, making them available for everyone to use.</p>\n\n\n\n<p>In this post, I&#8217;m going to focus on what we could do with the existing technology, in order to give us the best possible framework going forward.</p>\n\n\n\n<h2>A Reliable Base</h2>\n\n\n\n<p>Importers are an interesting technical problem. Much like you&#8217;d expect from any backup/restore code, importers need to be extremely reliable. They need to comfortable handle all sorts of unusual data, and they need to keep it all safe. Particularly considering their age, the WordPress Importers do a remarkably good job of handling most content you can throw at it.</p>\n\n\n\n<p>However, modern development practices have evolved and improved since the importers were first written, and we should certainly be making use of such practices, when they fit with our requirements.</p>\n\n\n\n<p>For building reliable software that we expect to largely run by itself, a variety of comprehensive automated testing is critical. This ensures we can confidently take on the broader issues, safe in the knowledge that we have a reliable base to work from.</p>\n\n\n\n<p>Testing <em>must</em> be the first item on this list. A variety of automated testing gives us confidence that changes are safe, and that the code can continue to be maintained in the future.</p>\n\n\n\n<p>Data formats must be well defined. While this is useful for ensuring data can be handled in a predictable fashion, it&#8217;s also a very clear demonstration of our commitment to data freedom.</p>\n\n\n\n<p>APIs for creating or extending importers should be straightforward for hooking into.</p>\n\n\n\n<h3>Performance Isn&#8217;t an Optional Extra</h3>\n\n\n\n<p>With sites constantly growing in size (and with the export files potentially gaining a heap of extra data), we need to care about the performance of the importers.</p>\n\n\n\n<p>Luckily, there&#8217;s already been some substantial work done on this front:</p>\n\n\n\n<div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"wp-embedded-content\"><a href=\"https://make.wordpress.org/core/2015/11/18/wordpress-importer-redux/\">WordPress Importer Redux</a></blockquote>\n</div>\n\n\n\n<p>There are other groups in the WordPress world who&#8217;ve made performance improvements in their own tools: gathering all of that experience is a relatively quick way to bring in production-tested improvements.</p>\n\n\n\n<h2>The WXR Format</h2>\n\n\n\n<p>It&#8217;s worth talking about the WXR format itself, and determining whether it&#8217;s the best option for handling exports into the future. XML-based formats are largely viewed as a relic of days gone past, so (if we were to completely ignore backwards compatibility for a moment) is there a modern data format that would work better?</p>\n\n\n\n<p>The short answer&#8230; kind of. <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" /></p>\n\n\n\n<p>XML is actually well suited to this use case, and (particularly when looking at performance improvements) is the only data format for which PHP comes with a built-in streaming parser.</p>\n\n\n\n<p>That said, WXR is basically an extension of the RSS format: as we add more data to the file that clearly doesn&#8217;t belong in RSS, there is likely an argument for defining an entirely WordPress-focused schema.</p>\n\n\n\n<h3>Alternative Formats</h3>\n\n\n\n<p>It&#8217;s important to consider what the priorities are for our export format, which will help guide any decision we make. So, I&#8217;d like to suggest the following priorities (in approximate priority order):</p>\n\n\n\n<ul><li><strong>PHP Support</strong>: The format should be natively supported in PHP, thought it is still workable if we need to ship an additional library.</li><li><strong>Performant</strong>: Particularly when looking at very large exports, it should be processed as quickly as possible, using minimal RAM.</li><li><strong>Supports Binary Files</strong>: <a href=\"https://pento.net/2021/01/18/wordpress-importers-stating-the-problem/#comment-37926\">The first comments on my previous post</a> asked about media support, we clearly should be treating it as a first-class citizen.</li><li><strong>Standards Based</strong>: Is the format based on a documented standard? (Another way to ask this: are there multiple different implementations of the format? Do those implementations all function the same?</li><li><strong>Backward Compatible</strong>: Can the format be used by existing tools with no changes, or minimal changes?</li><li><strong>Self Descriptive</strong>: Does the format include information about what data you&#8217;re currently looking at, or do you need to refer to a schema?</li><li><strong>Human Readable</strong>: Can the file be opened and read in a text editor?</li></ul>\n\n\n\n<p>Given these priorities, what are some options?</p>\n\n\n\n<h4>WXR (XML-based)</h4>\n\n\n\n<p>Either the RSS-based schema that we already use, or a custom-defined XML schema, the arguments for this format are pretty well known.</p>\n\n\n\n<p>One argument that hasn&#8217;t been well covered is how there&#8217;s a definite trade-off when it comes to supporting binary files. Currently, the importer tries to scrape the media file from the original source, which is not particularly reliable. So, if we were to look at including media files in the WXR file, the best option for storing them is to base64 encode them. Unfortunately, that would have a serious effect on performance, as well as readability: adding huge base64 strings would make even the smallest exports impossible to read.</p>\n\n\n\n<p>Either way, this option would be mostly backwards compatible, though some tools may require a bit of reworking if we were to substantial change the schema.</p>\n\n\n\n<h4>WXR (ZIP-based)</h4>\n\n\n\n<p>To address the issues with media files, an alternative option might be to follow the path that Microsoft Word and OpenOffice use: put the text content in an XML file, put the binary content into folders, and compress the whole thing. </p>\n\n\n\n<p>This addresses the performance and binary support problems, but is initially worse for readability: if you don&#8217;t know that it&#8217;s a ZIP file, you can&#8217;t read it in a text editor. Once you unzip it, however, it does become quite readable, and has the same level of backwards compatibility as the XML-based format.</p>\n\n\n\n<h4>JSON</h4>\n\n\n\n<p>JSON could work as a replacement for XML in both of the above formats, with one additional caveat: there is no streaming JSON parser built in to PHP. There are 3rd party libraries available, but given <a href=\"http://seriot.ch/parsing_json.php\">the documented differences between JSON parsers</a>, I would be wary about using one library to produce the JSON, and another to parse it.</p>\n\n\n\n<p>This format largely wouldn&#8217;t be backwards compatible, though tools which rely on the export file being plain text (eg, command line tools to do broad search-and-replaces on the file) can be modified relatively easily.</p>\n\n\n\n<p>There are additional subjective arguments (both for and against) the readability of JSON vs XML, but I&#8217;m not sure there&#8217;s anything to them beyond personal preference.</p>\n\n\n\n<h4>SQLite</h4>\n\n\n\n<p>The <a href=\"https://sqlite.org/index.html\">SQLite</a> team wrote <a href=\"https://www.sqlite.org/affcase1.html\">an interesting (indirect) argument</a> on this topic: OpenOffice uses a ZIP-based format for storing documents, the SQLite team argued that there would be benefits (particularly around performance and reliability) for OpenOffice to switch to SQLite.</p>\n\n\n\n<p>They key issues that I see are:</p>\n\n\n\n<ul><li>SQLite is included in PHP, but <a href=\"https://www.php.net/manual/en/sqlite3.installation.php\">not enabled by default on Windows</a>.</li><li>While the SQLite team have a strong commitment to providing long-term support, SQLite is not a standard, and the only implementation is the one provided by the SQLite team.</li><li>This option is not backwards compatible at all.</li></ul>\n\n\n\n<h4>FlatBuffers</h4>\n\n\n\n<p><a href=\"http://google.github.io/flatbuffers/\">FlatBuffers</a> is an interesting comparison, since it&#8217;s a data format focussed entirely on speed. The down side of this focus is that it <em>requires</em> a defined schema to read the data. Much like SQLite, the only standard for FlatBuffers is the implementation. Unlike SQLite, FlatBuffers has made no commitments to providing long-term support.</p>\n\n\n\n<table class=\"has-fixed-layout\"><thead><tr><th></th><th class=\"has-text-align-center\">WXR (XML-based)</th><th class=\"has-text-align-center\">WXR (ZIP-based)</th><th class=\"has-text-align-center\">JSON</th><th class=\"has-text-align-center\">SQLite</th><th class=\"has-text-align-center\">FlatBuffers</th></tr></thead><tbody><tr><td>Works in PHP?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td></tr><tr><td>Performant?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td></tr><tr><td>Supports Binary Files?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td></tr><tr><td>Standards Based?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /> / <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td></tr><tr><td>Backwards Compatible?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td></tr><tr><td>Self Descriptive?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td></tr><tr><td>Readable?</td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/26a0.png\" alt=\"⚠\" class=\"wp-smiley\" /> / <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td><td class=\"has-text-align-center\"><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/274c.png\" alt=\"❌\" class=\"wp-smiley\" /></td></tr></tbody></table>\n\n\n\n<p>As with any decision, this is a matter of trade-offs. I&#8217;m certainly interested in hearing additional perspectives on these options, or thoughts on options that I haven&#8217;t considered.</p>\n\n\n\n<p>Regardless of which particular format we choose for storing WordPress exports, every format should have (or in the case of FlatBuffers, <em>requires</em>) a schema. We can talk about schemata without going into implementation details, so I&#8217;ll be writing about that in the next post.</p>\n\n\n\n<div class=\"wp-block-group is-style-twentytwentyone-border\"><div class=\"wp-block-group__inner-container\">\n<p><em>This post is part of a series, talking about the WordPress Importers, their history, where they are now, and where they could go in the future.</em></p>\n\n\n\n<ul><li><em><a href=\"https://pento.net/2021/01/18/wordpress-importers-stating-the-problem/\">Part 1: Stating the Problem</a></em></li><li><em><a href=\"https://pento.net/2021/01/19/wordpress-importers-getting-our-house-in-order/\">Part 2: Getting Our House in Order</a></em></li><li><em><a href=\"https://pento.net/2021/01/20/wordpress-importers-defining-a-schema/\">Part 3: Defining a Schema</a></em></li><li><a href=\"https://pento.net/2021/01/21/wordpress-importers-free-as-in-speech/\"><em>Part 4: Free (as in Speech)</em></a></li></ul>\n\n\n\n<p></p>\n</div></div>\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Mon, 18 Jan 2021 22:50:26 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"Gary\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:11;a:6:{s:4:\"data\";s:13:\"\n	\n	\n	\n	\n	\n	\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:63:\"WPTavern: Kinsta Launches Free Local WordPress Development Tool\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:30:\"https://wptavern.com/?p=110351\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:171:\"https://wptavern.com/kinsta-launches-free-local-wordpress-development-tool?utm_source=rss&utm_medium=rss&utm_campaign=kinsta-launches-free-local-wordpress-development-tool\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:5961:\"<p class=\"has-drop-cap\">Kinsta, a managed WordPress hosting company, announced its local development tool named <a href=\"https://kinsta.com/devkinsta/\">DevKinsta</a> earlier today. The tool allows developers to spin up new WordPress sites, including multisite support, in moments. Each site is automatically configured with Nginx, PHP, and MySQL.</p>\n\n\n\n<p>DevKinsta packages Adminer, an open-source database manager. The system also includes an SMTP server and email inbox for testing outgoing emails locally.</p>\n\n\n\n<p>&ldquo;This is the first version of the tool, let&rsquo;s say the MVP, but we have a dedicated development team supporting and adding a lot of new features to it,&rdquo; said Tom Zsomborgi, Kinsta&rsquo;s Chief Business Officer.</p>\n\n\n\n<p>Developers can run and test HTTPS support and enable <code>WP_DEBUG</code> at the flip of a switch. Kinsta web hosting customers can also deploy their sites directly from the interface.</p>\n\n\n\n<p>It took me around an hour to get the system set up and running. To be more exact, I spent 53 minutes. Close enough. Between having to sign out, restart my laptop, and waiting for various pieces to install, I at least managed to get a little laundry done in those dull, in-between moments.</p>\n\n\n\n<img />Installing DevKinsta on Windows.\n\n\n\n<p>The setup process was not a completely pain-free affair. However, the price of admission to use this tool &mdash; a little bit of my time &mdash; was well worth it.</p>\n\n\n\n<p>Let me be clear. I have tested far worse systems. Even with over 15 years of development experience under my belt, I have utterly failed at setting up other local dev environments. For DevKinsta to simply get me to the finish line is a success.</p>\n\n\n\n<p>However, I like simple things, and I prefer them to move along relatively quickly. I am accustomed to a 20-minute XAMPP setup. While it may not be as fancy or have the bells and whistles of more sophisticated development tools, it gets the job done and rarely doles out headaches.</p>\n\n\n\n<p>The holdup was setting up Windows Subsystem for Linux (WSL 2) and Docker, which are both requirements. Jump-starting DevKinsta itself was a breeze. And, as an old-school XAMPP user, DevKinsta&rsquo;s ease of use has pulled me in enough to do more than just give it a passing glance. I could actually see myself using this on a day-to-day basis.</p>\n\n\n\n<p>In short, I am sold. DevKinsta is a tool all WordPress developers should at least spin up once.</p>\n\n\n\n<p>Thus far, the <a href=\"https://twitter.com/kinsta/status/1351177344740941829\">feedback on Twitter</a> has been generally positive. However, Linux users may have to wait a bit because the tool is only available for macOS and Windows at the moment.</p>\n\n\n\n<p>&ldquo;I love seeing companies releasing local development tools but I wish more would offer their services to Linux users,&rdquo; <a href=\"https://twitter.com/chadmccullough/status/1351195217483988998\">tweeted</a> WordPress developer Chad McCullough. &ldquo;There are a lot of us developers out there running Linux.&rdquo; The Kinsta team responded that the tool will eventually support Linux and that news is forthcoming.</p>\n\n\n\n<img />Spinning up a new WordPress site.\n\n\n\n<p>The simple and straightforward UI is what makes this tool useful. Most developers do